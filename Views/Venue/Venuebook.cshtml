@model IEnumerable<EventEase_Management.Entity.Venue>

@{
    ViewData["Title"] = "Venuebook";
}

<!-- Include Bootstrap Icons CDN if not already included -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<style>
    body {
        background-color: #fff;
        font-family: 'Segoe UI', sans-serif;
    }

    h2 {
        color: #c0392b;
    }

    .card {
        border: 1px solid #c0392b;
        transition: transform 0.2s ease-in-out;
    }

        .card:hover {
            transform: scale(1.02);
        }

    /* View Button */
    .btn-view {
        background-color: #b03a2e;
        border-color: #b03a2e;
        color: #fff;
    }

        .btn-view:hover {
            background-color: #943126;
            border-color: #943126;
        }

    /* Delete Button */
    .btn-delete {
        background-color: #e74c3c;
        border-color: #e74c3c;
        color: #fff;
    }

        .btn-delete:hover {
            background-color: #c0392b;
            border-color: #c0392b;
        }

    /* Add New Venue Card */
    .add-card {
        display: flex;
        align-items: center;
        justify-content: center;
        color: #b03a2e;
        font-weight: bold;
        font-size: 1.2rem;
        background-color: #fbeeee;
        border: 2px dashed #d98880;
        height: 100%;
        transition: background-color 0.3s ease;
    }

        .add-card:hover {
            background-color: #f9d6d5;
            cursor: pointer;
            text-decoration: none;
        }

    .card-title {
        color: #c0392b;
    }

    .card-body p {
        margin-bottom: 0.5rem;
    }

    .tooltip-inner {
        background-color: #c0392b;
        color: white;
    }

    .tooltip.bs-tooltip-top .arrow::before {
        border-top-color: #c0392b;
    }
</style>

<div class="container mt-4">
    <h2 class="mb-4">Venues</h2>

    <div class="row">
        <!-- Add New Venue Card -->
        <div class="col-md-4">
            <div class="card shadow-sm mb-4 h-100">
                <a asp-action="Venuepg" class="add-card card-body text-center text-decoration-none" data-bs-toggle="tooltip" data-bs-placement="top" title="Add a new venue">
                    <i class="bi bi-plus-circle me-2"></i> Add New Venue
                </a>
            </div>
        </div>

        <!-- Venue Cards -->
        @foreach (var venue in Model)
        {
            <div class="col-md-4">
                <div class="card shadow-sm mb-4 h-100">
                    <img src="@venue.ImageUrl" class="card-img-top" alt="Image of @venue.Name" style="height: 200px; object-fit: cover;">
                    <div class="card-body">
                        <h5 class="card-title">@venue.Name</h5>
                        <p><i class="bi bi-info-circle"></i> @venue.Description</p>
                        <p><i class="bi bi-geo-alt"></i> @venue.Location</p>
                        <p><i class="bi bi-people"></i> Capacity: @venue.Capacity</p>
                        <div class="d-flex justify-content-between mt-3">
                            <a asp-action="Details" asp-route-id="@venue.VenueID" class="btn btn-sm btn-view" data-bs-toggle="tooltip" data-bs-placement="top" title="View venue details">
                                <i class="bi bi-eye"></i> View
                            </a>
                            <a asp-action="Delete" asp-route-id="@venue.VenueID" class="btn btn-sm btn-delete" data-bs-toggle="tooltip" data-bs-placement="top" title="Delete this venue">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Bootstrap Tooltip Activation -->
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })

    // Display validation errors using SweetAlert
    @if (!ViewData.ModelState.IsValid)
    {
        foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <text>
                        Swal.fire({
                            icon: 'error',
                            title: 'Validation Error',
                            text: '@error.ErrorMessage',
                            confirmButtonColor: '#c0392b'
                        });
            </text>
            break; // Show only the first error for user-friendliness
        }
    }
</script>
